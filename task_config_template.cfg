[aws-tf-hvd-cnn]
patterns = ['INFO - Images/sec:\s+(\d+)', 'INFO -\s+\d+\s+\d+\s+\d+\.\d+\s+(\d+.\d+)', 'Time used in total: (\d+.\d+)']
metrics = ['Images per sec', 'Top 1 accuracy', 'Time-to-train (seconds)']
compute_method = ['average', 'last', 'last']
command_to_execute = rm -rf ./results/aws-tf-hvd-cnn && mpiexec --allow-run-as-root --rankfile ./cnn/rankfile --hostfile ./cnn/hostfile -np 8 python3 -u ./cnn/aws_tf_hvd_cnn.py --batch_size=256 --num_epochs=1 --fp16 --data_dir /home/ubuntu/imagenet/train-480px --model resnet50 --log_dir ./results/aws-tf-hvd-cnn --display_every 100 && python3 -u ./cnn/aws_tf_hvd_cnn.py --batch_size=256 --num_epochs=90 --data_dir=/home/ubuntu/imagenet/validation-480px/ --model resnet50 --log_dir ./results/aws-tf-hvd-cnn --eval 
num_gpus = 8

[tensorflow_resnet152_p3_2xlg]
patterns = ['images/sec: (\d+\.\d+)', 'top_1_accuracy: (\d+\.\d+)']
metrics = ['Images per sec', 'Top 1 accuracy']
compute_method = ['average', 'last']
command_to_execute = python tensorflow_benchmark/tf_cnn_benchmarks/tf_cnn_benchmarks.py --data_name=imagenet --num_gpus=1 --batch_size=32 --model=resnet152 --variable_update=parameter_server --print_training_accuracy=True
num_gpus = 1

[tensorflow_resnet152_p3_16xlg]
patterns = ['images/sec: (\d+\.\d+)', 'top_1_accuracy: (\d+\.\d+)']
metrics = ['Images per sec', 'Top 1 accuracy']
compute_method = ['average', 'last']
command_to_execute = python tensorflow_benchmark/tf_cnn_benchmarks/tf_cnn_benchmarks.py --data_name=imagenet --num_gpus=8 --batch_size=32 --model=resnet152 --variable_update=parameter_server --print_training_accuracy=True
num_gpus = 8

[tensorflow_resnet50_p3_16xlg_top1_val_batch_1024]
patterns = ['Throughput images/sec: (\d+\.\d+)', 'Total training time: (\d+\.\d+)']
metrics = ['Images per sec', 'Total training time']
compute_method = ['last', 'last']
command_to_execute = ~/tensorpack/examples/ResNet/imagenet-resnet.py --data ~/imagenet/ --gpu 0,1,2,3,4,5,6,7 -d 50 --batch 1024 --max_epoch 70
num_gpus = 8

[tensorflow_resnet50_p3_16xlg_top1_val_batch_512]
patterns = ['Throughput images/sec: (\d+\.\d+)', 'Total training time: (\d+\.\d+)']
metrics = ['Images per sec', 'Total training time']
compute_method = ['last', 'last']
command_to_execute = ~/tensorpack/examples/ResNet/imagenet-resnet.py --data ~/imagenet/ --gpu 0,1,2,3,4,5,6,7 -d 50 --batch 512 --max_epoch 70
num_gpus = 8

